/*
SQLyog Ultimate v8.32 
MySQL - 5.6.19 : Database - codewarrior
*********************************************************************
*/

/*!40101 SET NAMES utf8 */;

/*!40101 SET SQL_MODE=''*/;

/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
CREATE DATABASE /*!32312 IF NOT EXISTS*/`codewarrior` /*!40100 DEFAULT CHARACTER SET utf8 */;

USE `codewarrior`;

/*Table structure for table `admin` */

DROP TABLE IF EXISTS `admin`;

CREATE TABLE `admin` (
  `ID` int(3) NOT NULL AUTO_INCREMENT,
  `EMAIL` varchar(50) DEFAULT NULL,
  `PASSWORD` varchar(15) DEFAULT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;

/*Data for the table `admin` */

insert  into `admin`(`ID`,`EMAIL`,`PASSWORD`) values (1,'admin@technoholix2k16.com','tcp@gits');

/*Table structure for table `choice` */

DROP TABLE IF EXISTS `choice`;

CREATE TABLE `choice` (
  `ID` int(5) NOT NULL AUTO_INCREMENT,
  `TEXT` varchar(1000) DEFAULT NULL,
  `Q_ID` int(5) DEFAULT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB AUTO_INCREMENT=277 DEFAULT CHARSET=utf8;

/*Data for the table `choice` */

insert  into `choice`(`ID`,`TEXT`,`Q_ID`) values (73,'System programming language',8),(74,'General purpose language',8),(75,'Data processing language',8),(76,'None of the above',8),(77,'absiha',9),(78,'asiha',9),(79,'haasi',9),(80,'hai',9),(81,'0289',10),(82,'1289',10),(83,'713',10),(84,'Syntax error',10),(85,'Both can occur multiple times, but a declaration must occur first',11),(86,'A definition occurs once, but a declaration may occur many times',11),(87,'Both can occur multiple times, but a definition must occur first',11),(88,'A declaration occurs once, but a definition may occur many times',11),(89,'7',12),(90,'12',12),(91,'24',12),(92,'It will not compile because not enough initializers are given',12),(93,'135',13),(94,'+INF',13),(95,'-121',13),(96,'-8',13),(97,'Infinite Times',14),(98,'11',14),(99,'0',14),(100,'10',14),(101,'Float',15),(102,'Integer',15),(103,'Character',15),(104,'Enum',15),(105,'Mukesh Ambani',16),(106,'Lakashmi Mittal',16),(107,'It will print nothing',16),(108,'Mukesh Ambani Lakashmi Mittal',16),(109,'5 10',17),(110,'6 11',17),(111,'6 10',17),(112,'John Terry',17),(113,'garbage value garbage value garbage value',18),(114,'5 6 11',18),(115,'11 6 5',18),(116,'Compiler error',18),(117,'Stack underflow',19),(118,'Stack Overflow',19),(119,'None of these',19),(120,'Both A and B',19),(125,'CQESTIONBANK',21),(126,'CQUESTION',21),(127,'BANK',21),(128,'None of the above',21),(129,'Constructs new data type',22),(130,'Enables the initialization of an object as it is created',22),(131,'Obtain memory for a new variable',22),(132,'None of the above',22),(133,'104',23),(134,'114',23),(135,'140',23),(136,'14',23),(141,'104',25),(142,'114',25),(143,'140',25),(144,'14',25),(145,'13CQUESTIONBANK',26),(146,'CQUESTIONBANK13',26),(147,'Garbage CQUESTIONBANK',26),(148,'Compiler error',26),(149,'13CQUESTIONBANK',27),(150,'CQUESTIONBANK13',27),(151,'Garbage CQUESTIONBANK',27),(152,'Compiler error',27),(153,'Variable b is of integer type and will always have value 2',28),(154,'Variable a and b are of int type and the initial value of both variables is 2',28),(155,'Variable b is international scope and will have value 2',28),(156,'Variable b will have value 2 if not specified when calling function',28),(157,'stdio.h',29),(158,'stdio.h & math.h',29),(159,'stdio.h & stddef.h',29),(160,'None of the above',29),(161,'printf(\"\\n%c\", ((int *)p+4));',30),(162,'printf(\"\\n%d\",(*(int *)p+4));',30),(163,'printf(\"\\n%d\",*((int *)p+4));',30),(164,'None of the above',30),(165,'0',31),(166,'Garbage Value',31),(167,'Compilation Error',31),(168,'None of the above',31),(169,'::',32),(170,'+',32),(171,'-',32),(172,'[]',32),(173,'catch(..,)',33),(174,'catch(---)',33),(175,'catch(...)',33),(176,'catch(void x)',33),(177,'The compiler will generate error',34),(178,'Error will occur at run-time',34),(179,'Compiler provides its default constructor to build the object',34),(180,'None of these',34),(181,'Only 2, 3, 5',35),(182,'Only 2, 3, 4',35),(183,'Only 2, 4, 5',35),(184,'Only 3, 4, 5',35),(185,'Virtual Base class',36),(186,'Container class',36),(187,'Virtual function',36),(188,'Both a and c',36),(189,'Overloading',37),(190,'Overriding',37),(191,'Rewriting',37),(192,'All of these',37),(193,'Virtual class',38),(194,'Sealed class',38),(195,'Pure Local class',38),(196,'Abstract Class',38),(197,'1',39),(198,'as many as you like',39),(199,'0',39),(200,'2',39),(201,'try',40),(202,'allow',40),(203,'catch',40),(204,'throw',40),(205,'int',41),(206,'double',41),(207,'string',41),(208,'float',41),(209,'It is called as forward declaration',42),(210,'It is called as backward declaration',42),(211,'It is called as middle declaration',42),(212,'It is called as simple declaration',42),(213,'?::',43),(214,'&*',43),(215,'->>',43),(216,'->*',43),(217,'2',44),(218,'0',44),(219,'1',44),(220,'infinite',44),(221,'Option 1,2 and 4',45),(222,'Option 2 and 3',45),(223,'Option 1 and 3',45),(224,'Option 1,3 and 4',45),(225,'exp1',46),(226,'exp3',46),(227,'exp1 and exp3',46),(228,'exp1, exp2 and exp3',46),(229,'127',47),(230,'128',47),(231,'256',47),(232,'Infinitely',47),(233,'The code will print 5',48),(234,'The code will print 6',48),(235,'The code will result in L  value required',48),(236,'The code will result in R  value required',48),(237,'The program will print the output 1 3 0',49),(238,'The program will print the output 0 1 3',49),(239,'The program will results in expression syntax error',49),(240,'The program will print the output 0 3 1',49),(241,'cmp is a pointer to an void type',50),(242,'cmp is a void type pointer variable',50),(243,'cmp is a function that return a void pointer',50),(244,'cmp function returns nothing',50),(245,'cmp is a pointer to an void type',51),(246,'cmp is a void type pointer variable',51),(247,'cmp is a function that return a void pointer',51),(248,'cmp function returns nothing',51),(249,'cmp is a pointer to an void type',52),(250,'cmp is a void type pointer variable',52),(251,'cmp is a function that return a void pointer',52),(252,'cmp function returns nothing',52),(253,'exp1',53),(254,'exp3',53),(255,'exp1 and exp3',53),(256,'exp1, exp2 and exp3',53),(257,'exp1',54),(258,'exp3',54),(259,'exp1 and exp3',54),(260,'exp1, exp2 and exp3',54),(265,'int',56),(266,'double',56),(267,'string',56),(268,'float',56),(269,'Stack underflow',57),(270,'Stack Overflow',57),(271,'None of these',57),(272,'Both A and B',57),(273,'Infinite Times',58),(274,'11',58),(275,'0',58),(276,'10',58);

/*Table structure for table `question` */

DROP TABLE IF EXISTS `question`;

CREATE TABLE `question` (
  `ID` int(5) NOT NULL AUTO_INCREMENT,
  `TEXT` varchar(1000) DEFAULT NULL,
  `Q_SET` int(2) DEFAULT NULL,
  `ANSWER` varchar(10) DEFAULT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB AUTO_INCREMENT=59 DEFAULT CHARSET=utf8;

/*Data for the table `question` */

insert  into `question`(`ID`,`TEXT`,`Q_SET`,`ANSWER`) values (8,'C&nbsp;was&nbsp;primarily&nbsp;developed&nbsp;as',1,'A'),(9,'What&nbsp;will&nbsp;be&nbsp;printed&nbsp;after&nbsp;execution&nbsp;of&nbsp;the&nbsp;following&nbsp;program&nbsp;code?\r<br>\r<br>main()\r<br>{\r<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(\"\\nab\");&nbsp;\r<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(\"\\bsi\");&nbsp;\r<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(\"\\rha\");&nbsp;\r<br>}',1,'D'),(10,'Find&nbsp;the&nbsp;output&nbsp;of&nbsp;the&nbsp;following&nbsp;program\r<br>\r<br>void&nbsp;main()\r<br>{\r<br>	int&nbsp;i=01289;\r<br>	printf(\"%d\",i);\r<br>}',1,'D'),(11,'What&nbsp;is&nbsp;the&nbsp;difference&nbsp;between&nbsp;a&nbsp;declaration&nbsp;and&nbsp;a&nbsp;definition&nbsp;of&nbsp;a&nbsp;variable?',1,'D'),(12,'short&nbsp;testarray[4][3]&nbsp;=&nbsp;{&nbsp;{1},&nbsp;{2,3},&nbsp;{4,5,6}};\r<br>printf(\"%d\",&nbsp;sizeof(testarray));\r<br>\r<br>Assuming&nbsp;a&nbsp;short&nbsp;is&nbsp;two&nbsp;bytes&nbsp;long,&nbsp;what&nbsp;will&nbsp;be&nbsp;printed&nbsp;by&nbsp;the&nbsp;above&nbsp;code?',1,'C'),(13,'What&nbsp;will&nbsp;be&nbsp;output&nbsp;if&nbsp;you&nbsp;will&nbsp;compile&nbsp;and&nbsp;execute&nbsp;the&nbsp;following&nbsp;c&nbsp;code?\r<br>\r<br>void&nbsp;main(){\r<br>&nbsp;&nbsp;&nbsp;&nbsp;char&nbsp;c=125;\r<br>&nbsp;&nbsp;&nbsp;&nbsp;c=c+10;\r<br>&nbsp;&nbsp;&nbsp;&nbsp;printf(\"%d\",c);&nbsp;\r<br>}',1,'C'),(14,'How&nbsp;many&nbsp;times&nbsp;the&nbsp;string&nbsp;is&nbsp;printed?\r<br>\r<br>int&nbsp;main()\r<br>{\r<br>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;x;\r<br>&nbsp;&nbsp;&nbsp;&nbsp;for(x=-1;&nbsp;x<=10;&nbsp;x++)\r<br>&nbsp;&nbsp;&nbsp;&nbsp;{\r<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(x&nbsp;<&nbsp;5)\r<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue;\r<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else\r<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;\r<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(\"Welcome\\n\");\r<br>&nbsp;&nbsp;&nbsp;&nbsp;}\r<br>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;0;\r<br>}',2,'C'),(15,'Which&nbsp;of&nbsp;the&nbsp;following&nbsp;cannot&nbsp;be&nbsp;checked&nbsp;in&nbsp;a&nbsp;switch-case&nbsp;statement?',2,'A'),(16,'What&nbsp;will&nbsp;be&nbsp;output&nbsp;when&nbsp;you&nbsp;will&nbsp;execute&nbsp;following&nbsp;c&nbsp;code?\r<br>\r<br>void&nbsp;main(){\r<br>&nbsp;&nbsp;&nbsp;&nbsp;if(!printf(\"Mukesh&nbsp;Ambani\"))\r<br>&nbsp;&nbsp;&nbsp;&nbsp;if(printf(\"&nbsp;Lakashmi&nbsp;Mittal\"));\r<br>}',3,'A'),(17,'What&nbsp;will&nbsp;be&nbsp;output&nbsp;when&nbsp;you&nbsp;will&nbsp;execute&nbsp;following&nbsp;c&nbsp;code?\r<br>\r<br>void&nbsp;main(){\r<br>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;a=5,b=10;\r<br>&nbsp;&nbsp;&nbsp;&nbsp;if(++a||++b)\r<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(\"%d&nbsp;%d\",a,b);\r<br>&nbsp;&nbsp;&nbsp;&nbsp;else\r<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(\"John&nbsp;Terry\");\r<br>}',2,'C'),(18,'void&nbsp;main()\r<br>{\r<br>&nbsp;int&nbsp;a=5,b=6,c=11;\r<br>&nbsp;printf(\"%d&nbsp;%d&nbsp;%d\");\r<br>}\r<br>\r<br>What&nbsp;will&nbsp;output&nbsp;when&nbsp;you&nbsp;compile&nbsp;and&nbsp;run&nbsp;the&nbsp;above&nbsp;code?',3,'A'),(19,'Whats&nbsp;happen&nbsp;if&nbsp;base&nbsp;condition&nbsp;is&nbsp;not&nbsp;defined&nbsp;in&nbsp;recursion&nbsp;?',3,'B'),(21,'void&nbsp;main()\r<br>{\r<br>&nbsp;char&nbsp;*str=\"CQUESTIONBANK\";\r<br>&nbsp;printf(str+9);\r<br>}\r<br>\r<br>What&nbsp;will&nbsp;output&nbsp;when&nbsp;you&nbsp;compile&nbsp;and&nbsp;run&nbsp;the&nbsp;above&nbsp;code?',3,'C'),(22,'A&nbsp;constructor',3,'B'),(23,'Consider&nbsp;the&nbsp;statements&nbsp;a&nbsp;=&nbsp;13&nbsp;;&nbsp;c&nbsp;=&nbsp;a<<&nbsp;3&nbsp;;&nbsp;(a&nbsp;and&nbsp;c&nbsp;are&nbsp;integers).&nbsp;The&nbsp;result&nbsp;assigned&nbsp;to&nbsp;the&nbsp;integer&nbsp;c&nbsp;is',3,'A'),(25,'Consider&nbsp;the&nbsp;statements&nbsp;a&nbsp;=&nbsp;13&nbsp;;&nbsp;c&nbsp;=&nbsp;a<<&nbsp;3&nbsp;;&nbsp;(a&nbsp;and&nbsp;c&nbsp;are&nbsp;integers).&nbsp;The&nbsp;result&nbsp;assigned&nbsp;to&nbsp;the&nbsp;integer&nbsp;c&nbsp;is',2,'A'),(26,'void&nbsp;main()&nbsp;\r<br>{&nbsp;\r<br>&nbsp;printf(\"%d\",printf(\"CQUESTIONBANK\"));&nbsp;\r<br>}&nbsp;\r<br>\r<br>What&nbsp;will&nbsp;output&nbsp;when&nbsp;you&nbsp;compile&nbsp;and&nbsp;run&nbsp;the&nbsp;above&nbsp;code?',2,'B'),(27,'void&nbsp;main()&nbsp;\r<br>{&nbsp;\r<br>&nbsp;printf(\"%d\",printf(\"CQUESTIONBANK\"));&nbsp;\r<br>}&nbsp;\r<br>\r<br>What&nbsp;will&nbsp;output&nbsp;when&nbsp;you&nbsp;compile&nbsp;and&nbsp;run&nbsp;the&nbsp;above&nbsp;code?',3,'B'),(28,'Observe&nbsp;following&nbsp;function&nbsp;declaration&nbsp;and&nbsp;choose&nbsp;the&nbsp;best&nbsp;answer:\r<br>\r<br>int&nbsp;divide&nbsp;(&nbsp;int&nbsp;a,&nbsp;int&nbsp;b&nbsp;=&nbsp;2&nbsp;);',2,'D'),(29,'In&nbsp;which&nbsp;header&nbsp;file&nbsp;is&nbsp;the&nbsp;NULL&nbsp;macro&nbsp;defined?',1,'C'),(30,'In&nbsp;the&nbsp;following&nbsp;program&nbsp;how&nbsp;would&nbsp;you&nbsp;print&nbsp;50&nbsp;using&nbsp;p?\r<br>\r<br>main()\r<br>{\r<br>&nbsp;int&nbsp;a[]={10,20,30,40,50};\r<br>&nbsp;char&nbsp;*p;\r<br>&nbsp;p&nbsp;=&nbsp;(char&nbsp;*)a;\r<br>}',2,'C'),(31,'What&nbsp;is&nbsp;the&nbsp;output&nbsp;of&nbsp;the&nbsp;following&nbsp;code?\r<br>\r<br>int&nbsp;main(){\r<br>	static&nbsp;int&nbsp;a;\r<br>	printf(\"%d\",&nbsp;a);\r<br>	return&nbsp;0;\r<br>}',3,'A'),(32,'Which&nbsp;of&nbsp;the&nbsp;following&nbsp;operators&nbsp;cant&nbsp;be&nbsp;overloaded?',1,'A'),(33,'Generic&nbsp;catch&nbsp;handler&nbsp;is&nbsp;represented&nbsp;by',1,'C'),(34,'If&nbsp;default&nbsp;constructor&nbsp;is&nbsp;not&nbsp;defined,&nbsp;then&nbsp;how&nbsp;the&nbsp;objects&nbsp;of&nbsp;the&nbsp;class&nbsp;will&nbsp;be&nbsp;created?',2,'C'),(35,'Which&nbsp;of&nbsp;the&nbsp;following&nbsp;statements&nbsp;are&nbsp;not&nbsp;true&nbsp;about&nbsp;destructor?\r<br>\r<br>1.&nbsp;It&nbsp;is&nbsp;invoked&nbsp;when&nbsp;object&nbsp;goes&nbsp;out&nbsp;of&nbsp;the&nbsp;scope\r<br>2.&nbsp;Like&nbsp;constructor,&nbsp;it&nbsp;can&nbsp;also&nbsp;have&nbsp;parameters&nbsp;\r<br>3.&nbsp;It&nbsp;can&nbsp;be&nbsp;virtual&nbsp;\r<br>4.&nbsp;It&nbsp;can&nbsp;be&nbsp;declared&nbsp;in&nbsp;private&nbsp;section\r<br>5.&nbsp;It&nbsp;bears&nbsp;same&nbsp;name&nbsp;as&nbsp;that&nbsp;of&nbsp;the&nbsp;class&nbsp;and&nbsp;precedes&nbsp;Lambda&nbsp;sign',1,'C'),(36,'Runtime&nbsp;polymorphism&nbsp;can&nbsp;be&nbsp;achieved&nbsp;with',1,'C'),(37,'When&nbsp;a&nbsp;virtual&nbsp;function&nbsp;is&nbsp;redefined&nbsp;by&nbsp;the&nbsp;derived&nbsp;class,&nbsp;it&nbsp;is&nbsp;called',2,'B'),(38,'If&nbsp;a&nbsp;class&nbsp;contains&nbsp;pure&nbsp;virtual&nbsp;function,&nbsp;then&nbsp;it&nbsp;is&nbsp;termed&nbsp;as',3,'D'),(39,'In&nbsp;C++&nbsp;how&nbsp;many&nbsp;return&nbsp;statements&nbsp;are&nbsp;allowed&nbsp;in&nbsp;a&nbsp;non-void&nbsp;function?',1,'B'),(40,'Which&nbsp;of&nbsp;the&nbsp;following&nbsp;keyword&nbsp;is&nbsp;not&nbsp;used&nbsp;in&nbsp;exception&nbsp;handling',2,'B'),(41,'The&nbsp;pow&nbsp;functions&nbsp;returns',2,'B'),(42,'In&nbsp;the&nbsp;following&nbsp;statements,\r<br>\r<br>class&nbsp;ABC;\r<br>class&nbsp;ABC\r<br>{\r<br>};',3,'A'),(43,'Following&nbsp;is&nbsp;the&nbsp;dereferencing&nbsp;operator',1,'D'),(44,'Destructor&nbsp;can&nbsp;have&nbsp;following&nbsp;number&nbsp;of&nbsp;argument',2,'B'),(45,'struct\r<br>{\r<br>&nbsp;int&nbsp;x;\r<br>&nbsp;int&nbsp;y;\r<br>}abc;\r<br>\r<br>You&nbsp;cannot&nbsp;access&nbsp;x&nbsp;by&nbsp;the&nbsp;following.\r<br>\r<br>1.&nbsp;abc&nbsp;->&nbsp;x\r<br>2.&nbsp;abc[0]&nbsp;->x\r<br>3.&nbsp;abc.x\r<br>4.&nbsp;(abc)&nbsp;->x',3,'A'),(46,'In&nbsp;the&nbsp;following&nbsp;loop&nbsp;construct,&nbsp;which&nbsp;one&nbsp;is&nbsp;executed&nbsp;only&nbsp;once&nbsp;always.\r<br>\r<br>for&nbsp;(&nbsp;exp1;&nbsp;exp2;&nbsp;exp3)&nbsp;{.&nbsp;.&nbsp;.}',3,'A'),(47,'unsigned&nbsp;char&nbsp;c;\r<br>for(&nbsp;c&nbsp;=&nbsp;0;&nbsp;c&nbsp;!=&nbsp;256;&nbsp;c+2&nbsp;)\r<br>printf(\"%d\",&nbsp;c);\r<br>\r<br>Who&nbsp;many&nbsp;times&nbsp;the&nbsp;loop&nbsp;executes?',1,'D'),(48,'Which&nbsp;of&nbsp;the&nbsp;following&nbsp;statement&nbsp;is&nbsp;correct&nbsp;about&nbsp;the&nbsp;code&nbsp;snippet&nbsp;given&nbsp;below?\r<br>\r<br>int&nbsp;main(){\r<br>	int&nbsp;num&nbsp;=&nbsp;5;\r<br>	printf(\"%d\",&nbsp;++num++&nbsp;);\r<br>\r<br>	return&nbsp;0;\r<br>}',2,'C'),(49,'Which&nbsp;of&nbsp;the&nbsp;following&nbsp;statement&nbsp;is&nbsp;correct&nbsp;about&nbsp;the&nbsp;code&nbsp;snippet&nbsp;given&nbsp;below?\r<br>\r<br>int&nbsp;main(){\r<br>	int&nbsp;a&nbsp;=&nbsp;10,&nbsp;b&nbsp;=&nbsp;2,&nbsp;c;\r<br>	a&nbsp;=&nbsp;!(&nbsp;c&nbsp;=&nbsp;c&nbsp;==&nbsp;c)&nbsp;&&&nbsp;++b;\r<br>	c&nbsp;+=&nbsp;(a&nbsp;+&nbsp;b--);\r<br>	printf(\"%d&nbsp;%d&nbsp;%d\",&nbsp;b,&nbsp;c,&nbsp;a);\r<br>	return&nbsp;0;\r<br>}',3,'A'),(50,'What&nbsp;do&nbsp;the&nbsp;following&nbsp;declaration&nbsp;signify?\r<br>\r<br>void&nbsp;*cmp();',1,'C'),(51,'What&nbsp;do&nbsp;the&nbsp;following&nbsp;declaration&nbsp;signify?\r<br>\r<br>void&nbsp;*cmp();',2,'C'),(52,'What&nbsp;do&nbsp;the&nbsp;following&nbsp;declaration&nbsp;signify?\r<br>\r<br>void&nbsp;*cmp();',3,'C'),(53,'In&nbsp;the&nbsp;following&nbsp;loop&nbsp;construct,&nbsp;which&nbsp;one&nbsp;is&nbsp;executed&nbsp;only&nbsp;once&nbsp;always.&nbsp;\r<br>\r<br>for&nbsp;(&nbsp;exp1;&nbsp;exp2;&nbsp;exp3)&nbsp;{.&nbsp;.&nbsp;.}',2,'A'),(54,'In&nbsp;the&nbsp;following&nbsp;loop&nbsp;construct,&nbsp;which&nbsp;one&nbsp;is&nbsp;executed&nbsp;only&nbsp;once&nbsp;always.&nbsp;\r<br>\r<br>for&nbsp;(&nbsp;exp1;&nbsp;exp2;&nbsp;exp3)&nbsp;{.&nbsp;.&nbsp;.}',1,'A'),(56,'The&nbsp;pow&nbsp;functions&nbsp;returns',3,'B'),(57,'Whats&nbsp;happen&nbsp;if&nbsp;base&nbsp;condition&nbsp;is&nbsp;not&nbsp;defined&nbsp;in&nbsp;recursion&nbsp;?',2,'B'),(58,'How&nbsp;many&nbsp;times&nbsp;the&nbsp;string&nbsp;is&nbsp;printed?&nbsp;\r<br>\r<br>int&nbsp;main()&nbsp;\r<br>{&nbsp;\r<br>&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;x;&nbsp;\r<br>&nbsp;&nbsp;&nbsp;&nbsp;for(x=-1;&nbsp;x<=10;&nbsp;x++)&nbsp;\r<br>&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;\r<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(x&nbsp;<&nbsp;5)&nbsp;\r<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue;&nbsp;\r<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;\r<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;&nbsp;\r<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(\"Welcome\\n\");&nbsp;\r<br>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;\r<br>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;0;&nbsp;\r<br>}',3,'C');

/*Table structure for table `result` */

DROP TABLE IF EXISTS `result`;

CREATE TABLE `result` (
  `ID` int(5) NOT NULL AUTO_INCREMENT,
  `ANSWER` varchar(10) DEFAULT NULL,
  `Q_ID` int(5) DEFAULT NULL,
  `U_ID` int(5) DEFAULT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB AUTO_INCREMENT=895 DEFAULT CHARSET=utf8;

/*Data for the table `result` */

insert  into `result`(`ID`,`ANSWER`,`Q_ID`,`U_ID`) values (52,'A',8,38),(53,'D',9,38),(54,'A',10,38),(55,'A',11,38),(56,'A',12,38),(57,'D',13,38),(58,'A',29,38),(59,'D',32,38),(60,'D',33,38),(61,'A',35,38),(62,'A',36,38),(63,'A',39,38),(64,'A',43,38),(65,'D',47,38),(66,'C',14,37),(67,'A',15,37),(68,'D',17,37),(69,'A',25,37),(70,'A',26,37),(71,'D',28,37),(72,'D',30,37),(73,'C',34,37),(74,'D',37,37),(75,'D',40,37),(76,'A',41,37),(77,'D',44,37),(78,'A',48,37),(79,'A',51,37),(80,'A',53,37),(81,'A',16,39),(82,'A',18,39),(83,'D',19,39),(84,'C',21,39),(85,'D',22,39),(86,'D',23,39),(87,'A',27,39),(88,'B',31,39),(89,'A',38,39),(90,'D',42,39),(91,'D',45,39),(92,'D',46,39),(93,'C',49,39),(94,'D',52,39),(95,'D',56,39),(96,'C',14,45),(97,'B',15,45),(98,'C',17,45),(99,'D',25,45),(100,'B',26,45),(101,'D',28,45),(102,'A',30,45),(103,'C',34,45),(104,'D',37,45),(105,'D',40,45),(106,'D',41,45),(107,'D',44,45),(108,'B',48,45),(109,'D',51,45),(110,'C',14,42),(111,'C',14,43),(112,'A',8,44),(113,'D',9,44),(114,'D',10,44),(115,'B',16,52),(116,'D',18,52),(117,'D',19,52),(118,'B',21,52),(119,'B',22,52),(120,'D',23,52),(121,'D',27,52),(122,'B',31,52),(123,'A',38,52),(124,'A',42,52),(125,'B',45,52),(126,'A',46,52),(127,'B',49,52),(128,'D',52,52),(129,'A',56,52),(130,'A',8,59),(131,'A',9,59),(132,'D',10,59),(133,'B',11,59),(134,'B',12,59),(135,'D',13,59),(136,'C',29,59),(137,'B',32,59),(138,'D',33,59),(139,'D',35,59),(140,'D',36,59),(141,'A',39,59),(142,'A',43,59),(143,'D',47,59),(144,'C',14,73),(145,'A',15,73),(146,'A',17,73),(147,'A',25,73),(148,'D',26,73),(149,'D',28,73),(150,'D',30,73),(151,'C',34,73),(152,'B',37,73),(153,'B',40,73),(154,'A',41,73),(155,'B',44,73),(156,'D',48,73),(157,'D',51,73),(158,'A',53,73),(159,'B',8,71),(160,'A',9,71),(161,'C',10,71),(162,'D',11,71),(163,'A',12,71),(164,'D',13,71),(165,'D',29,71),(166,'D',32,71),(167,'A',33,71),(168,'A',35,71),(169,'D',36,71),(170,'C',39,71),(171,'B',43,71),(172,'B',47,71),(173,'B',50,71),(174,'C',14,65),(175,'D',15,65),(176,'B',17,65),(177,'A',25,65),(178,'C',26,65),(179,'D',28,65),(180,'D',30,65),(181,'C',34,65),(182,'B',37,65),(183,'B',40,65),(184,'A',41,65),(185,'B',44,65),(186,'B',48,65),(187,'D',51,65),(188,'A',8,56),(189,'D',9,56),(190,'B',10,56),(191,'D',11,56),(192,'C',12,56),(193,'A',13,56),(194,'B',29,56),(195,'D',32,56),(196,'D',33,56),(197,'A',35,56),(198,'D',36,56),(199,'B',39,56),(200,'D',43,56),(201,'D',47,56),(202,'B',8,46),(203,'C',9,46),(204,'B',10,46),(205,'B',11,46),(206,'C',12,46),(207,'A',13,46),(208,'A',29,46),(209,'D',32,46),(210,'C',33,46),(211,'C',35,46),(212,'D',36,46),(213,'A',39,46),(214,'C',43,46),(215,'B',47,46),(216,'C',14,47),(217,'A',15,47),(218,'C',17,47),(219,'A',25,47),(220,'D',26,47),(221,'D',28,47),(222,'D',30,47),(223,'C',34,47),(224,'B',37,47),(225,'B',40,47),(226,'A',41,47),(227,'B',44,47),(228,'D',48,47),(229,'C',51,47),(230,'D',8,50),(231,'A',9,50),(232,'B',10,50),(233,'A',11,50),(234,'B',12,50),(235,'A',13,50),(236,'D',29,50),(237,'A',32,50),(238,'D',33,50),(239,'C',35,50),(240,'D',36,50),(241,'B',39,50),(242,'C',43,50),(243,'D',47,50),(244,'C',50,50),(245,'B',14,55),(246,'D',15,55),(247,'D',17,55),(248,'A',25,55),(249,'D',26,55),(250,'D',28,55),(251,'C',30,55),(252,'C',34,55),(253,'C',37,55),(254,'B',40,55),(255,'A',41,55),(256,'B',44,55),(257,'C',48,55),(258,'A',51,55),(259,'A',8,69),(260,'C',9,69),(261,'A',10,69),(262,'D',11,69),(263,'D',12,69),(264,'B',13,69),(265,'D',29,69),(266,'A',32,69),(267,'A',33,69),(268,'D',35,69),(269,'D',36,69),(270,'D',39,69),(271,'D',43,69),(272,'B',47,69),(273,'C',50,69),(274,'C',14,51),(275,'A',15,51),(276,'C',17,51),(277,'A',25,51),(278,'D',26,51),(279,'D',28,51),(280,'C',30,51),(281,'C',34,51),(282,'B',37,51),(283,'B',40,51),(284,'B',41,51),(285,'B',44,51),(286,'D',48,51),(287,'D',51,51),(288,'B',16,66),(289,'D',18,66),(290,'C',19,66),(291,'C',21,66),(292,'B',22,66),(293,'D',23,66),(294,'B',27,66),(295,'A',31,66),(296,'D',38,66),(297,'A',42,66),(298,'A',45,66),(299,'A',46,66),(300,'C',49,66),(301,'C',52,66),(302,'B',14,64),(303,'D',15,64),(304,'D',17,64),(305,'B',25,64),(306,'C',26,64),(307,'D',28,64),(308,'B',30,64),(309,'C',34,64),(310,'B',37,64),(311,'B',40,64),(312,'B',41,64),(313,'B',44,64),(314,'A',48,64),(315,'B',51,64),(316,'C',16,74),(317,'B',18,74),(318,'C',19,74),(319,'D',21,74),(320,'B',22,74),(321,'D',23,74),(322,'C',27,74),(323,'B',31,74),(324,'D',38,74),(325,'A',42,74),(326,'A',45,74),(327,'A',46,74),(328,'A',49,74),(329,'C',52,74),(330,'A',8,58),(331,'A',8,58),(332,'B',9,58),(333,'B',9,58),(334,'B',10,58),(335,'B',10,58),(336,'D',11,58),(337,'D',11,58),(338,'B',12,58),(339,'B',12,58),(340,'B',13,58),(341,'B',13,58),(342,'C',29,58),(343,'C',29,58),(344,'A',32,58),(345,'A',32,58),(346,'C',33,58),(347,'C',33,58),(348,'C',35,58),(349,'C',35,58),(350,'D',36,58),(351,'D',36,58),(352,'A',39,58),(353,'A',39,58),(354,'A',43,58),(355,'A',43,58),(356,'A',47,58),(357,'A',47,58),(358,'C',14,67),(359,'C',15,67),(360,'D',17,67),(361,'D',25,67),(362,'C',26,67),(363,'C',28,67),(364,'B',30,67),(365,'B',34,67),(366,'B',37,67),(367,'B',40,67),(368,'B',41,67),(369,'B',44,67),(370,'B',48,67),(371,'B',51,67),(372,'A',8,62),(373,'C',9,62),(374,'D',10,62),(375,'B',11,62),(376,'C',12,62),(377,'A',13,62),(378,'A',29,62),(379,'A',32,62),(380,'C',33,62),(381,'C',35,62),(382,'A',36,62),(383,'A',39,62),(384,'A',43,62),(385,'B',47,62),(386,'C',50,62),(387,'C',16,68),(388,'A',18,68),(389,'C',19,68),(390,'C',21,68),(391,'B',22,68),(392,'A',23,68),(393,'A',27,68),(394,'A',31,68),(395,'D',38,68),(396,'A',42,68),(397,'A',45,68),(398,'A',46,68),(399,'A',49,68),(400,'C',52,68),(401,'A',16,61),(402,'A',18,61),(403,'B',19,61),(404,'D',21,61),(405,'B',22,61),(406,'A',23,61),(407,'B',27,61),(408,'A',31,61),(409,'D',38,61),(410,'A',42,61),(411,'A',45,61),(412,'A',46,61),(413,'C',49,61),(414,'C',52,61),(415,'B',56,61),(416,'C',16,54),(417,'A',18,54),(418,'B',19,54),(419,'D',21,54),(420,'B',22,54),(421,'A',23,54),(422,'B',27,54),(423,'A',31,54),(424,'D',38,54),(425,'D',42,54),(426,'B',45,54),(427,'A',46,54),(428,'D',49,54),(429,'C',52,54),(430,'B',14,57),(431,'C',15,57),(432,'D',17,57),(433,'B',25,57),(434,'A',26,57),(435,'A',28,57),(436,'C',30,57),(437,'C',34,57),(438,'A',37,57),(439,'B',40,57),(440,'C',41,57),(441,'C',44,57),(442,'A',48,57),(443,'B',51,57),(444,'C',14,72),(445,'A',15,72),(446,'B',17,72),(447,'A',25,72),(448,'A',26,72),(449,'D',28,72),(450,'A',30,72),(451,'C',34,72),(452,'B',37,72),(453,'B',40,72),(454,'D',41,72),(455,'B',44,72),(456,'B',48,72),(457,'C',51,72),(458,'B',8,63),(459,'D',9,63),(460,'B',10,63),(461,'B',11,63),(462,'D',12,63),(463,'C',13,63),(464,'D',29,63),(465,'B',32,63),(466,'D',33,63),(467,'B',35,63),(468,'A',36,63),(469,'A',39,63),(470,'B',43,63),(471,'B',47,63),(472,'D',14,53),(473,'A',15,53),(474,'B',17,53),(475,'B',25,53),(476,'D',26,53),(477,'D',28,53),(478,'A',30,53),(479,'C',34,53),(480,'B',37,53),(481,'B',40,53),(482,'B',41,53),(483,'B',44,53),(484,'B',48,53),(485,'D',51,53),(486,'A',8,48),(487,'C',9,48),(488,'B',10,48),(489,'B',11,48),(490,'C',12,48),(491,'B',13,48),(492,'A',29,48),(493,'D',32,48),(494,'D',33,48),(495,'C',35,48),(496,'C',36,48),(497,'A',39,48),(498,'D',43,48),(499,'B',47,48),(500,'A',14,60),(501,'D',15,60),(502,'D',17,60),(503,'D',25,60),(504,'D',26,60),(505,'D',28,60),(506,'A',30,60),(507,'A',34,60),(508,'B',37,60),(509,'D',40,60),(510,'A',41,60),(511,'D',44,60),(512,'A',8,49),(513,'C',9,49),(514,'B',10,49),(515,'D',11,49),(516,'C',12,49),(517,'A',13,49),(518,'B',29,49),(519,'A',32,49),(520,'C',33,49),(521,'C',35,49),(522,'D',36,49),(523,'A',39,49),(524,'D',43,49),(525,'B',47,49),(526,'C',14,70),(527,'A',15,70),(528,'B',17,70),(529,'C',25,70),(530,'B',26,70),(531,'D',28,70),(532,'B',30,70),(533,'C',34,70),(534,'B',37,70),(535,'B',40,70),(536,'A',41,70),(537,'B',44,70),(538,'B',48,70),(539,'C',51,70),(540,'B',16,82),(541,'B',18,82),(542,'B',19,82),(543,'B',21,82),(544,'A',22,82),(545,'B',23,82),(546,'D',27,82),(547,'A',31,82),(548,'A',38,82),(549,'A',42,82),(550,'A',45,82),(551,'A',46,82),(552,'B',49,82),(553,'C',52,82),(554,'B',16,77),(555,'D',18,77),(556,'A',19,77),(557,'A',21,77),(558,'B',22,77),(559,'A',23,77),(560,'D',27,77),(561,'B',31,77),(562,'A',38,77),(563,'A',42,77),(564,'A',45,77),(565,'D',46,77),(566,'C',49,77),(567,'B',52,77),(568,'C',16,86),(569,'A',18,86),(570,'D',19,86),(571,'C',21,86),(572,'B',22,86),(573,'D',23,86),(574,'C',27,86),(575,'B',31,86),(576,'D',38,86),(577,'A',42,86),(578,'D',45,86),(579,'A',46,86),(580,'B',49,86),(581,'C',52,86),(582,'A',8,76),(583,'B',9,76),(584,'B',10,76),(585,'C',11,76),(586,'B',12,76),(587,'B',13,76),(588,'B',29,76),(589,'D',32,76),(590,'D',33,76),(591,'B',35,76),(592,'A',36,76),(593,'C',39,76),(594,'C',43,76),(595,'D',47,76),(596,'B',16,80),(597,'A',18,80),(598,'C',19,80),(599,'A',21,80),(600,'A',22,80),(601,'D',23,80),(602,'D',27,80),(603,'A',31,80),(604,'A',38,80),(605,'B',42,80),(606,'D',45,80),(607,'D',46,80),(608,'D',49,80),(609,'D',52,80),(610,'D',14,75),(611,'C',15,75),(612,'D',17,75),(613,'C',25,75),(614,'C',26,75),(615,'B',28,75),(616,'B',30,75),(617,'B',34,75),(618,'A',37,75),(619,'B',40,75),(620,'B',41,75),(621,'A',44,75),(622,'C',48,75),(623,'B',51,75),(624,'B',8,84),(625,'D',9,84),(626,'C',10,84),(627,'A',11,84),(628,'C',12,84),(629,'A',13,84),(630,'B',29,84),(631,'A',32,84),(632,'D',33,84),(633,'B',35,84),(634,'C',36,84),(635,'C',39,84),(636,'B',43,84),(637,'D',47,84),(638,'C',50,84),(639,'B',14,81),(640,'A',15,81),(641,'D',17,81),(642,'D',25,81),(643,'D',26,81),(644,'D',28,81),(645,'A',30,81),(646,'C',34,81),(647,'A',37,81),(648,'B',40,81),(649,'B',41,81),(650,'B',44,81),(651,'C',48,81),(652,'C',51,81),(653,'B',14,93),(654,'D',15,93),(655,'D',17,93),(656,'D',25,93),(657,'A',26,93),(658,'D',28,93),(659,'A',30,93),(660,'B',34,93),(661,'B',37,93),(662,'B',40,93),(663,'B',41,93),(664,'A',44,93),(665,'D',48,93),(666,'C',51,93),(667,'C',14,78),(668,'A',15,78),(669,'B',17,78),(670,'B',25,78),(671,'C',26,78),(672,'D',28,78),(673,'B',30,78),(674,'C',34,78),(675,'A',37,78),(676,'D',40,78),(677,'B',41,78),(678,'B',44,78),(679,'B',48,78),(680,'D',51,78),(681,'B',8,92),(682,'B',9,92),(683,'B',10,92),(684,'D',11,92),(685,'D',12,92),(686,'A',13,92),(687,'A',29,92),(688,'A',32,92),(689,'D',33,92),(690,'B',35,92),(691,'D',36,92),(692,'C',39,92),(693,'C',43,92),(694,'A',47,92),(695,'B',16,94),(696,'D',18,94),(697,'C',19,94),(698,'B',21,94),(699,'B',22,94),(700,'D',23,94),(701,'D',27,94),(702,'A',31,94),(703,'D',38,94),(704,'A',42,94),(705,'B',45,94),(706,'A',46,94),(707,'C',49,94),(708,'B',52,94),(709,'C',14,88),(710,'A',15,88),(711,'C',17,88),(712,'D',25,88),(713,'D',26,88),(714,'D',28,88),(715,'A',30,88),(716,'D',34,88),(717,'B',37,88),(718,'B',40,88),(719,'C',41,88),(720,'A',44,88),(721,'C',48,88),(722,'B',51,88),(723,'D',16,85),(724,'D',18,85),(725,'C',19,85),(726,'C',21,85),(727,'B',22,85),(728,'B',23,85),(729,'D',27,85),(730,'A',31,85),(731,'D',38,85),(732,'A',42,85),(733,'A',45,85),(734,'A',46,85),(735,'B',49,85),(736,'B',52,85),(737,'B',14,90),(738,'D',15,90),(739,'D',17,90),(740,'B',25,90),(741,'D',26,90),(742,'B',28,90),(743,'B',30,90),(744,'B',34,90),(745,'A',37,90),(746,'B',40,90),(747,'C',41,90),(748,'B',44,90),(749,'B',48,90),(750,'A',51,90),(751,'B',16,95),(752,'D',18,95),(753,'B',19,95),(754,'B',21,95),(755,'B',22,95),(756,'B',23,95),(757,'C',27,95),(758,'B',31,95),(759,'A',38,95),(760,'D',42,95),(761,'C',45,95),(762,'D',46,95),(763,'B',49,95),(764,'A',52,95),(765,'B',8,96),(766,'B',9,96),(767,'D',10,96),(768,'B',11,96),(769,'D',12,96),(770,'B',13,96),(771,'A',29,96),(772,'B',32,96),(773,'B',33,96),(774,'C',35,96),(775,'D',36,96),(776,'A',39,96),(777,'C',43,96),(778,'D',47,96),(779,'D',14,97),(780,'D',15,97),(781,'A',17,97),(782,'D',25,97),(783,'D',26,97),(784,'D',28,97),(785,'D',30,97),(786,'C',34,97),(787,'B',37,97),(788,'B',40,97),(789,'D',41,97),(790,'B',44,97),(791,'D',48,97),(792,'B',51,97),(793,'D',53,97),(794,'C',16,83),(795,'A',18,83),(796,'B',19,83),(797,'C',21,83),(798,'B',22,83),(799,'C',23,83),(800,'D',27,83),(801,'B',31,83),(802,'D',38,83),(803,'D',42,83),(804,'A',45,83),(805,'D',46,83),(806,'C',49,83),(807,'A',52,83),(808,'A',56,83),(809,'A',8,87),(810,'A',9,87),(811,'D',10,87),(812,'B',11,87),(813,'D',12,87),(814,'A',13,87),(815,'D',29,87),(816,'D',32,87),(817,'D',33,87),(818,'C',35,87),(819,'C',36,87),(820,'A',39,87),(821,'B',43,87),(822,'B',47,87),(823,'A',50,87),(824,'C',16,79),(825,'A',18,79),(826,'A',19,79),(827,'C',21,79),(828,'B',22,79),(829,'A',23,79),(830,'D',27,79),(831,'A',31,79),(832,'C',38,79),(833,'A',42,79),(834,'A',45,79),(835,'D',46,79),(836,'C',49,79),(837,'A',52,79),(838,'C',8,89),(839,'A',9,89),(840,'B',10,89),(841,'D',11,89),(842,'C',12,89),(843,'B',13,89),(844,'A',29,89),(845,'D',32,89),(846,'B',33,89),(847,'D',35,89),(848,'D',36,89),(849,'A',39,89),(850,'C',43,89),(851,'B',47,89),(852,'B',14,91),(853,'D',15,91),(854,'A',17,91),(855,'D',25,91),(856,'D',26,91),(857,'A',28,91),(858,'D',30,91),(859,'C',34,91),(860,'B',37,91),(861,'B',40,91),(862,'A',41,91),(863,'A',44,91),(864,'A',48,91),(865,'C',51,91),(866,'A',14,98),(867,'A',15,98),(868,'D',17,98),(869,'D',25,98),(870,'D',26,98),(871,'A',28,98),(872,'A',30,98),(873,'C',34,98),(874,'B',37,98),(875,'B',40,98),(876,'B',41,98),(877,'B',44,98),(878,'B',48,98),(879,'C',51,98),(880,'A',8,101),(881,'D',9,101),(882,'D',10,101),(883,'D',11,101),(884,'C',12,101),(885,'C',13,101),(886,'C',29,101),(887,'A',32,101),(888,'C',33,101),(889,'C',35,101),(890,'C',36,101),(891,'B',39,101),(892,'D',43,101),(893,'D',47,101),(894,'C',50,101);

/*Table structure for table `user` */

DROP TABLE IF EXISTS `user`;

CREATE TABLE `user` (
  `ID` int(5) NOT NULL AUTO_INCREMENT,
  `NAME` varchar(50) DEFAULT NULL,
  `EMAIL` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB AUTO_INCREMENT=103 DEFAULT CHARSET=utf8;

/*Data for the table `user` */

insert  into `user`(`ID`,`NAME`,`EMAIL`) values (37,'Neeraj Mishra','sareneeru420@gmail.com'),(38,'neeraj','sareneeru94@gmail.com'),(39,'pankaj mishra','pankumishra143@gmail.com'),(40,'sumit','sumit@gmail.com'),(41,'Kumar','kumar@gmail.com'),(42,'demo1','demo@gmail.com'),(43,'Anil Kumar','anil@gmail.com'),(44,'Hello World','helloworld@gmail.com'),(45,'nishtha','nistha@gmail.com'),(46,'Devendra Suthar','devendra7055@gmail.com'),(47,'Kartik Agarwal','krtk.711@gmail.com'),(48,'PRATEEK GUWALANI','guwalani.prateek22@gmail.com'),(49,'Rounak Maheshwari','ronakdhannani@gmail.com'),(50,'Fakhruddin payra','fakhripayra@gmail.com'),(51,'Dixita Jain','thedjdudes2613@gmail.com'),(52,'Nidhi Kachhawa','nidhikachhawa7@gmail.com'),(53,'HARSHITA PURSWANI','hp551995@gmail.com'),(54,'Firdous Nath','firumath@gmail.com'),(55,'Anubhooti Jain','anubhootijain0011@gmail.com'),(56,'Kamesh Dashora','Dashorakamesh95@gmail.com'),(57,'priyanka joshi','priyankajoshisrgp595@gmail.com'),(58,'Alisha Dalal','dalalalisha@gmail.com'),(59,'Dishani vijay vergiya','dishani.vijay96@gmail.com'),(60,'Tushar Raj','tushar2690raj@gmail.com'),(61,'hussain gadisaaz','hgsaaz@gmail.com'),(62,'Rituparna Das','ritu14.das95@gmail.com'),(63,'Nishank Agarwal','nishank_agarwal@yahoo.com'),(64,'Pallavi Joshi','jpallavi29@gmail.com'),(65,'Tofiq Quadri','tofiqquadri@ymail.com'),(66,'Mohit Nagori ','deathrival786@gmail.com'),(67,'megha jain','megha5296jain@gmail.com'),(68,'Ajay Prajapat','ajayprajapat@live.com'),(69,'Jagriti Tiwari','tiwari.jagriti@ymail.com'),(70,'paawan chowhan','chowhanpaawan3@gmail.com'),(71,'alisha mansury','ayubmansury@gmail.com'),(72,'Aabha Sukhwal','aabha_sukhwal@hotmail.com'),(73,'priyanka talesara','priyanka96talesara@gmail.com'),(74,'chandrika mehndiratta','chandrikamehndiratta@gmail.com'),(75,'Achal Soni','soniachal04@gmail.com'),(76,'nikita lohar','nikita.lohar96@gmail.com'),(77,'Vaibhavi Sharma','sharmavaibhavi26@yahoo.com'),(78,'Bhupendra Paliwal','bhupendrapaliwal16@gmail.com'),(79,'VINIT GUPTA','vinitgupta3995@gmail.com'),(80,'rakesh ranjan','rr13032065@gmail.com'),(81,'Chitrang Ambikar','chitrangambikar@gmail.com'),(82,'burhanuddin bohra','burhansadriwala53@gmail.com'),(83,'divya bakliya','divya_bakliya@gmail.com'),(84,'Lakshya Sharma','rosharma59@rediffmail.com'),(85,'nisha jain','nishajain1229@gmail.com'),(86,'jitendra agarwal','jituaga01@gmail.com'),(87,'dhwani bapna','dhwanibapna@gmail.com'),(88,'Bhumika Shrimali','bhumika.shrimali9@gmail.com'),(89,'Arifa Sabeel','sabeelarifa@gmail.com'),(90,'Ayushi Khandelwal','10ayushikhandelwal@gmail.com'),(91,'Ayushi yadav','ayushiyadav1609@gmail.com'),(92,'Shubhra Dashora','shubhradashora@gmail.com'),(93,'Suraj Rathore','rathore.suraj7@gmail.com'),(94,'nimisha khetan','nimishakhetan1994@gmail.com'),(95,'shefali shrimal','shefalijain06@hotmail.com'),(96,'shivani chordia','shivanichordia7@gmail.com'),(97,'pooja pancholi','pooja.pancholi19@hotmail.com'),(98,'Raveena Dahima','raveenadahima@gmail.com'),(99,'swati paneri','swtipaneri96@gmail.com'),(100,'Ankur','ankur@gmail.com'),(101,'Nikita Lohar','nikita@gmail.com'),(102,'Swati Bhati','swati@gmail.com');

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;
